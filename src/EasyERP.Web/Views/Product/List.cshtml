@using EasyErp.Core.Configuration.Settings
@using EasyErp.Core.Infrastructure
@using EasyERP.Web.Framework
@model EasyERP.Web.Models.Products.ProductListModel
@section SectionTitle
{  
        <h1 id="crmTitle">
            <strong>产品管理</strong>
        </h1>   
}
@{
    ViewBag.Title = "产品管理";
    var defaultGridPageSize = EngineContext.Current.Resolve<AreaSettings>().DefaultGridPageSize;
    var gridPageSizes = EngineContext.Current.Resolve<AreaSettings>().GridPageSizes;
}
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="section-header row">
        @*<div class="title">
            <label>产品管理</label>
        </div>*@
        <div class="options row">
            @*<a href="@Url.Action("Create")" class="k-button">添加产品</a>
            <a href="@Url.Action("Inventory")" class="k-button">入库</a>*@
            @*<input type="button" id="delete-selected" class="k-button" value="删除" />*@
        </div>
    </div>
    <div class="row crm-fst-line">
        <div class="form-group col-md-3">
            @Html.ValidationMessageFor(m => m.SearchProductName, "", new
        {
            @class = "text-danger"
        })
            @Html.LabelFor(m => m.SearchProductName)
            @Html.EditorFor(model => model.SearchProductName, new { id = "search-product-name" })
        </div>
        <div class="form-group col-md-3">
            @Html.LabelFor(m => m.SearchCategoryId)
            @Html.DropDownList("SearchCategoryId", Model.AvailableCategories, new
        {
            id = "selected-category"
        })
        </div>

        <div class="form-group col-md-3">
            @Html.LabelFor(m => m.SearchStoreId)
            @Html.DropDownList("SearchStoreId", Model.AvailableStores, new
        {
            id = "selected-store"
        })
        </div>
    </div>
    
    <div class="row">
        <div class="col-md-3"></div>
        <div class="crm-filter-btn col-md-3">
            <button class="btn k-button" id="search-products"><i class="fa fa-filter" style="margin-right:1em;"></i>筛选产品</button>
            @*<input type="button" id="search-products" class="k-button" value="筛选产品" />*@
        </div>
        </div>
    <div class="row">
        <div class="col-md-12">
            <div id="products-grid"></div>
            <script type="text/javascript">
                kendo.culture("zh-CN");
                $(document).ready(function() {
                    $("#products-grid").kendoGrid({
                        dataSource: {
                            type: "json",
                            transport: {
                                read: {
                                    url: "/Product/ProductList",
                                    type: "POST",
                                    dataType: "json",
                                    data: additionalData
                                }
                            },
                            schema: {
                                data: "Data",
                                total: "Total",
                                errors: "Errors"
                            },
                            error: function(e) {
                                display_kendoui_grid_error(e);
                                // Cancel the changes
                                this.cancelChanges();
                            },
                            pageSize: @(defaultGridPageSize),
                            serverPaging: true,
                            serverFiltering: true,
                            serverSorting: true
                        },
                        pageable: {
                            refresh: true,
                            pageSizes: [@(gridPageSizes)]
                        },
                        editable: {
                            confirmation: false,
                            mode: "inline"
                        },
                        scrollable: false,
                        dataBound: onDataBound,
                        columns: [
                            {
                                field: "Id",
                                headerTemplate: "<input id='mastercheckbox' type='checkbox' />",
                                headerAttributes: { style: "text-align:center" },
                                attributes: { style: "text-align:center" },
                                template: "<input type='checkbox' value='#=Id#' class='checkboxGroups' />",
                                width: 50
                            },
                            { field: "Name", title: "产品名", width: 300 },
                            { field: "CategoryName", title: "产品目录", width: 300 },
                            { field: "StockQuantity", title: "库存", width: 100 },
                            { field: "Price", title: "价格", width: 100 },
                            { field: "ProductCost", title: "成本", width: 100 },
                            { field: "Sku", title: "条码", width: 100 },
                            { field: "Id", title: "查看入库记录", width: 100, template: "<a href=\"Records/#=Id#\">编辑</a>" },
                            { field: "Id", title: "修改", width: 100, template: "<a href=\"Edit/#=Id#\">编辑</a>" },
                            { field: "Id", title: "修改价格", width: 100, template: "<a href=\"Price/#=Id#\">修改价格</a>" }
                        ]
                    });
                });
            </script>
        </div>
    </div>

    <script type="text/javascript">
        var selectedIds = [];
        $(document).ready(function() {
            //search button
            $("#search-products").click(function() {
                //search
                var grid = $("#products-grid").data("kendoGrid");
                grid.dataSource.page(1); //new search. Set page size to 1
                //grid.dataSource.read(); we already loaded the grid above using "page" function
                //clear selected checkboxes
                $(".checkboxGroups").attr("checked", false).change();
                selectedIds = [];
                return false;
            });

            $("#@Html.FieldIdFor(model => model.SearchProductName)").keydown(function(event) {
                if (event.keyCode == 13) {
                    $("#search-products").click();
                    return false;
                }
            });

            //$("#select-category").onchange(function(event) {
            //    $("#search-products").click();
            //});

            //delete selected
            $("#delete-selected").click(function(e) {

                e.preventDefault();

                var postData = {
                    selectedIds: selectedIds
                };
                addAntiForgeryToken(postData);

                $.ajax({
                    cache: false,
                    type: "POST",
                    url: "@(Url.Action("DeleteSelected", "Product"))",
                    data: postData,
                    complete: function(data) {
                        //reload grid
                        var grid = $("#products-grid").data("kendoGrid");
                        grid.dataSource.read();
                    },
                    error: function(xhr, ajaxOptions, thrownError) {
                        alert(thrownError);
                    },
                    traditional: true
                });
                return false;
            });

            $("#mastercheckbox").click(function() {
                $(".checkboxGroups").attr("checked", $(this).is(":checked")).change();
            });

            //wire up checkboxes.
            $("#products-grid").on("change", "input[type=checkbox][id!=mastercheckbox]", function(e) {
                var $check = $(this);
                if ($check.is(":checked") == true) {
                    var checked = jQuery.inArray($check.val(), selectedIds);
                    if (checked == -1) {
                        //add id to selectedIds.
                        selectedIds.push($check.val());
                    }
                } else {
                    var checked = jQuery.inArray($check.val(), selectedIds);
                    if (checked > -1) {
                        //remove id from selectedIds.
                        selectedIds = $.grep(selectedIds, function(item, index) {
                            return item != $check.val();
                        });
                    }
                }
                updateMasterCheckbox();
            });
        });

        function additionalData() {
            var data = {
                SearchProductName: $("#search-product-name").val(),
                SearchStoreId: $("#selected-store").val(),
                SearchCategoryId: $("#selected-category").val()
            };
            addAntiForgeryToken(data);
            return data;
        }

        function onDataBound(e) {
            $("#products-grid input[type=checkbox][id!=mastercheckbox]").each(function() {
                var currentId = $(this).val();
                var checked = jQuery.inArray(currentId, selectedIds);
                //set checked based on if current checkbox's value is in selectedIds.
                $(this).attr("checked", checked > -1);
            });

            updateMasterCheckbox();
        }

        function updateMasterCheckbox() {
            var numChkBoxes = $("#products-grid input[type=checkbox][id!=mastercheckbox]").length;
            var numChkBoxesChecked = $("#products-grid input[type=checkbox][id!=mastercheckbox]:checked").length;
            $("#mastercheckbox").attr("checked", numChkBoxes == numChkBoxesChecked && numChkBoxes > 0);
        }
    </script>
}