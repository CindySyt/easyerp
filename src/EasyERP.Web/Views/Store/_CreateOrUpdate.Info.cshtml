@using EasyERP.Web.Framework.UI
@model EasyERP.Web.Models.Stores.StoreModel
@{
    //resources for product tags input
    Html.AppendCssFileParts("~/Content/tagit/jquery.tagit.css");
    Html.AppendScriptParts("~/Scripts/tag-it.min.js");
}
<div class="form-group">
    @Html.LabelFor(model => model.Name):
    @Html.EditorFor(model => model.Name)
    @Html.ValidationMessageFor(model => model.Name)
</div>
<div class="form-group">
    @Html.LabelFor(model => model.ShortDescription):
    @Html.TextAreaFor(x => x.ShortDescription, new
            {
                style = "Width: 250px; Height: 150px;"
            })
    @Html.ValidationMessageFor(model => model.ShortDescription)
</div>
<div class="form-group">
    @Html.LabelFor(model => model.FullDescription):
    @Html.EditorFor(x => x.FullDescription, "RichEditor")
    @Html.ValidationMessageFor(model => model.FullDescription)
</div>
<div class="form-group">
    @Html.LabelFor(model => model.Address):
    @Html.EditorFor(model => model.Address)
    @Html.ValidationMessageFor(model => model.Address)
</div>
<div class="form-group">
    @Html.LabelFor(model => model.PhoneNumber):
    @Html.EditorFor(model => model.PhoneNumber)
    @Html.ValidationMessageFor(model => model.PhoneNumber)
</div>
@if (Model.CreatedOn.HasValue)
{
    <div class="form-group">
        @Html.LabelFor(model => model.CreatedOn):
        @Model.CreatedOn.Value.ToString("F")
    </div>
}
@if (Model.UpdatedOn.HasValue)
{
    <div class="form-group">
        @Html.LabelFor(model => model.UpdatedOn):
        @Model.UpdatedOn.Value.ToString("F")
    </div>
}